generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Question {
  id        Int      @id @db.SmallInt
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  type      String?
  content   String?  @default("")
  Answer    Answer[]
  Option    Option[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Option {
  id           Int      @id @db.SmallInt
  questionId   Int
  optionNumber Int?
  createdAt    DateTime @default(now()) @db.Timestamptz(6)
  content      String?
  Question     Question @relation(fields: [questionId], references: [id])
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model User {
  id           Int      @id @db.SmallInt
  email        String?  @db.VarChar
  name         String?  @db.VarChar
  nickname     String?  @db.VarChar
  introduction String?
  sex          String?  @db.VarChar
  birthYear    String?  @db.VarChar
  nationality  String?  @db.VarChar
  createdAt    DateTime @default(now()) @db.Timestamptz(6)
  Answer       Answer[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Answer {
  id           Int       @id @db.SmallInt
  userId       Int?
  questionId   Int?
  answerOption String?   @db.VarChar
  createdAt    DateTime  @default(now()) @db.Timestamptz(6)
  Question     Question? @relation(fields: [questionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  User         User?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
